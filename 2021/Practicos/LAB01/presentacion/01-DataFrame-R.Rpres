

DataFrames en R 
========================================================
autosize: true
width: 1200
height: 800

<br />
Conociendo R
<br />
<br />
<br />
<br />
Juan Manuel Fernandez


Sobre la Herramienta
========================================================
R es un lenguaje de programación con un enfoque al análisis estadístico.

R es software libre y es uno de los lenguajes mas utilizados en investigación por la comunidad estadística y minería de datos.

<center>
```{r, echo=FALSE}
   knitr::include_graphics('./images/R-logo.jpg')
```
</center>

Se distribuye bajo la licencia GNU GPL. Está disponible para los sistemas operativos Unix y GNU/Linux, Windows & Macintosh.
<br />
<br />
[1] https://www.r-project.org/
<br />
[2] https://www.rstudio.com/

Sobre los datos
========================================================
Un dataset consiste en una representación de un conjunto de hechos/individuos a través de un conjunto de características.

Para describir un dataset se analizan esas características (variables) y sus relaciones.

Las variables, a grandes rasgos pueden ser:
- Cualitativas/Discretas. 
- Cuantitativas/Continuas.

Es importante conocer los tipos de datos, dado que ello nos permite decidir que tipo de análisis utilizar.

Sobre el dataset para la demostración
========================================================
<small>
Iris: 150 instancias de flores de la planta iris en sus variedades:
- Setosa,
- Versicolor,
- Virginica.

Las caracteristicas son:
```{r}
data(iris)
names(iris)
```
</small>

***
<center>
```{r}
pie(table(iris$Species), main="Cantidad por especie")
```
</center>
***

Empezamos: Cargando el dataset
========================================================
autosize: true
<small>
Podemos cargar el dataset de, al menos, dos maneras:
- Gráfica

<center>
```{r echo=FALSE}
   knitr::include_graphics('./images/load.png')
```
</center>

***
- Por Código
```{r}
library(readr)
getwd()
# Para modificar el path: setwd("")
#iris <- read_csv("iris.csv")
```
</small>
***
Los datasets serán contenidos en un dato de tipo Data.Frame...

Nuestro Tipo de dato estrella: el Data.Frame
========================================================
autosize: true
<small>
El dataframe es una estructura de datos similar a la matriz, a diferencia que puede tener columnas con diferentes tipos de datos:
```{r}
str(iris)
```
Es la estructura de datos mas utilizada por su versatilidad y potencia. Podemos cargar datasets a partir de distintos tipos de archivos o podemos crearlas a partir de la conjunción de listas/arrays con la función data.frame().
</small>

el Data.Frame - Accediendo a los datos
========================================================
autosize:true
<small>
Accedemos por Atributo/Columna:
```{r}
iris$Sepal.Length[1:5]
iris[1:5,1]
```
Accedemos por Instancia/Fila:
```{r}
iris[3,1:3]
iris[2,-c(4,5)]
```
***
Seleccionamos Instancias que cumplen una condición:
```{r, echo=FALSE}
data(iris)
```
```{r}
iris[iris$Species=="setosa" & iris$Sepal.Length>5.2,3:4]
```
</small>

Actualizando el Data.Frame (ABM)
========================================================
autosize:true
<small>
Podemos AGREGAR una instancia o un conjunto de instancias:
```{r}
nuevas.filas<-data.frame(Sepal.Length=5, Sepal.Width=5, Petal.Length=5, Petal.Width=5, Species="Data Mining")
iris<-rbind(iris, nuevas.filas)
```
Podemos MODIFICAR una instancia o un conjunto de instancias:
```{r, echo=FALSE}
data(iris)
```
```{r}
iris[1,1:4]=c(4.4,4.4,4.4,4.4)
```
```{r}
iris[iris$Species=="setosa",1:4]=iris[iris$Species=="setosa",1:4]*5
```
Podemos ELIMINAR una instancia o un conjunto de instancias:
```{r}
iris<-iris[-c(1:5),]
```
</small>
